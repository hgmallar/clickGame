{"version":3,"sources":["components/Navbar.js","components/Jumbotron.js","components/Image.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","messageClass","message","score","highscore","Jumbotron","Image","id","src","alt","name","onClick","handleClick","App","state","images","clicked","messageclass","gameclass","newScore","_this","newHighscore","newClicked","newMessage","newMessageClass","newGameClass","shuffle","setState","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","_this2","this","components_Navbar","components_Jumbotron","map","image","components_Image","key","toString","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0ec1b3d1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className=\"container\">\r\n            <h1 className=\"title\">Clicky Game</h1>\r\n            <h2 className={props.messageClass}>{props.message}</h2>\r\n            <h2>Score: <span className=\"score\">{props.score}</span> | Top Score: <span className=\"top\">{props.highscore}</span></h2>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nfunction Jumbotron() {\r\n    return (\r\n        <div className=\"instructions\">\r\n            <h1>Clicky Game!</h1>\r\n            <h3>Click on an image to earn points, but don't click on any more than once!</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from \"react\";\r\n\r\nfunction Image(props) {\r\n  return (\r\n\r\n    <img id={props.id} src={props.src} alt={props.name} onClick={() => props.handleClick(props.id)} ></img>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Image from \"./components/Image\";\nimport images from \"./images.json\";\n\nclass App extends React.Component {\n    state = {\n        score: 0,\n        highscore: 0,\n        images: images,\n        clicked: [false, false, false, false, false, false, false, false, false, false, false, false],\n        message: \"Click an image to begin!\",\n        messageclass: \"nav-inst\",\n        gameclass: \"photos\"\n    };\n    handleClick = (id) => {\n        let newScore = this.state.score;\n        let newHighscore = this.state.highscore;\n        let newClicked = this.state.clicked;\n        let newMessage = this.state.message;\n        let newMessageClass = this.state.messageclass;\n        let newGameClass = this.state.gameclass;\n        if (!this.state.clicked[id]) {\n            newScore = newScore + 1;\n            if (newScore > this.state.highscore) {\n                newHighscore = newScore;\n            }\n            if (newScore === 12) {\n                newScore = 0;\n                newClicked = [false, false, false, false, false, false, false, false, false, false, false, false];\n                newMessage = \"You won!\";\n                newMessageClass = ((newMessageClass === \"nav-correct1\") ? \"nav-correct2\" : \"nav-correct1\");\n                newGameClass = \"photos shakediv\";\n            }\n            else {\n                newClicked[id] = true;\n                newMessage = \"You guessed correctly!\";\n                newMessageClass = ((newMessageClass === \"nav-correct1\") ? \"nav-correct2\" : \"nav-correct1\");\n                newGameClass = \"photos\";\n            }\n        }\n        else {\n            newScore = 0;\n            newClicked = [false, false, false, false, false, false, false, false, false, false, false, false];\n            newMessage = \"You guessed incorrectly!\";\n            newMessageClass = \"nav-incorrect\";\n            newGameClass = \"photos shakediv\"\n        }\n        this.shuffle(this.state.images);\n        this.setState({\n            score: newScore,\n            highscore: newHighscore,\n            clicked: newClicked,\n            message: newMessage,\n            messageclass: newMessageClass,\n            gameclass: newGameClass\n        });\n    };\n    shuffle = (array) => {\n        var currentIndex = array.length;\n        var temporaryValue, randomIndex;\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n        return array;\n    };\n    render() {\n        return (\n            <div className=\"container\">\n                <Navbar messageClass={this.state.messageclass} message={this.state.message} score={this.state.score} highscore={this.state.highscore} />\n                <Jumbotron />\n                <div className={this.state.gameclass}>\n                    {this.state.images.map(image => (<Image key={image.id.toString()} id={image.id} src={image.image} name={image.name} handleClick={this.handleClick} />))}\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}